/* eslint-disable jsx-a11y/media-has-caption */
/* eslint-disable max-len */
import Header from '../../Components/Header/Header';
import walletVideo from '../../assets/videos/trybeWallet.mp4';
import walletStoreLogin from '../../assets/walletLogin.png';
import walletStoreForm from '../../assets/walletForm.png';

function TrybeWallet() {
  return (
    <>
      <Header />
      <section className="projectPageMainSection">

        <h1 className="ProjecTitle">Trybe Wallet</h1>

        <div className="projectTagDiv">
          <button className="pinnedProjectYear" disabled>2023</button>
          <div className="pinnedProjectYearLanguage">
            <p className="pinnedProjectLang">React</p>
            <p className="pinnedProjectLang">TypeScript</p>
            <p className="pinnedProjectLang">JavaScript</p>
            <p className="pinnedProjectLang">Redux</p>
          </div>
        </div>

        <p className="projectResume">
          Neste projeto, eu criei o Trybe Wallet, uma carteira de controle de gastos
          com conversor de moedas.
        </p>

        <div className="imgDivWallet">
          <img className="projectImgWallet" src={ walletStoreLogin } alt="home page" />
        </div>

        <h3 className="projectH3">Essa aplica√ß√£o ser√° capaz de:</h3>

        <ul className="ulList">
          <li className="projectList">üìù Adicionar, remover e editar um gasto.</li>
          <li className="projectList">üìä Visualizar sua tabela de gastos.</li>
          <li className="projectList">üí± Visualizar o total de gastos convertidos para uma moeda de sua escolha.</li>
        </ul>
        <h3 className="projectH3">Al√©m disso, neste projeto, foi verificado minha capacidade de:</h3>
        <ul className="ulList">
          <li className="projectList">üîÑ Criar um store Redux em aplica√ß√µes React.</li>
          <li className="projectList">üîÑ Criar reducers no Redux em aplica√ß√µes React.</li>
          <li className="projectList">üîÑ Criar actions no Redux em aplica√ß√µes React.</li>
          <li className="projectList">üîÑ Criar dispatchers no Redux em aplica√ß√µes React.</li>
          <li className="projectList">üé£ Usar os hooks do Redux para manipula√ß√£o e leitura do estado global.</li>
          <li className="projectList">üåê Criar actions ass√≠ncronas na aplica√ß√£o React que faz uso do Redux.</li>
        </ul>

        <div className="imgDivWallet">
          <img className="projectImgWallet" src={ walletStoreForm } alt="pagina de compra" />
        </div>
        <p className="projectResume">
          Para garantir a qualidade do c√≥digo, utilizei neste projeto os linters ESLint e StyleLint.
          Assim, o c√≥digo se manteve alinhado com as boas pr√°ticas de desenvolvimento, al√©m de ser mais
          leg√≠vel e de f√°cil manuten√ß√£o.
        </p>

        <div className="videoDiv">
          <video className="projectVideo" width="860" height="520" controls>
            <source src={ walletVideo } type="video/mp4" />
            Seu navegador n√£o suporta o elemento de v√≠deo.
          </video>
        </div>

        <h2 className="projectH2">Requisitos</h2>
        <ul className="ulList">
          <li className="projectList">- Criar uma p√°gina inicial de login com valida√ß√£o dos campos.</li>
          <li className="projectList">- Na p√°gina principal, criar um header para as informa√ß√µes da carteira do usu√°rio</li>
          <li className="projectList">
            - Desenvolver um formul√°rio para adicionar uma despesa contendo caracter√≠sticas
            como moeda, m√©todo de pagamento, descri√ß√£o...
          </li>
          <li className="projectList">- Criar uma tabela com os gastos cadastrados pelo usu√°rio</li>
          <li className="projectList">- Implementar a a funcionalidade de deletar uma despesa</li>
          <li className="projectList">- Implementar a funcionalidade de editar uma despesa</li>
          <li className="projectList">
            - Desenvolver testes que cobrem at√© 90% das linhas de c√≥digo (como os testes foram
            feitos antes da estiliza√ß√£o, a cobertura atual pode n√£o atingir os 90%).
          </li>
        </ul>

        <p className="projectResume"><b>Al√©m disso, toda a aplica√ß√£o foi posteriormente estilizada garantindo um layout moderno e responsivo ao usu√°rio.</b></p>

        <h2 className="projectH2">O que j√° veio pronto da Trybe</h2>
        <p className="projectResume">
          Neste projeto, utilizei o Cypress para garantir o funcionamento dos requisitos e dos testes criados
          e requisitados pela Trybe.
          As fun√ß√µes de renderWithRouter e similares j√° vieram prontas, cabendo a mim apenas us√°-las.
          Por fim, um objeto contendo um retorno simulado da API foi disponibilizado para
          poder ser usado nos testes.
        </p>
      </section>
    </>
  );
}

export default TrybeWallet;
